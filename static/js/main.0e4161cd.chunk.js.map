{"version":3,"sources":["App.js","index.js"],"names":["App","useState","data","setData","useEffect","response","a","fetch","res","json","dataJson","console","log","slice","warn","upperCaseLetter","words","toUpperCase","className","map","title","urls","alt_description","description","style","width","src","small","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAqDeA,MAlDf,WACE,IAEA,EAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACAC,qBAAU,WACR,IAAMC,EAAQ,uCAAG,8BAAAC,EAAA,+EAEKC,MALtB,0FAGiB,cAEPC,EAFO,gBAGUA,EAAIC,OAHd,OAGPC,EAHO,OAIbC,QAAQC,IAAIF,GACZP,GAAQ,kBAAMO,EAASG,MAAM,EAAG,OALnB,kDAObF,QAAQG,KAAR,MAPa,0DAAH,qDAUdT,MACC,IACH,IAAMU,EAAkB,SAACC,GAEvB,OADe,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAQ,GAAGC,gBAAX,OAA2BD,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAOH,MAAM,KAGpD,OACE,qBAAKK,UAAW,MAAhB,gBACGhB,QADH,IACGA,OADH,EACGA,EAAMiB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,gBAAiBC,EAAjC,EAAiCA,YAAjC,OACT,sBAAKL,UAAU,OAAmBM,MAAO,CAAEC,MAAO,QAAlD,UACE,sBAAKP,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SACGH,EAAgBO,IAAoB,UAEvC,mBAAGJ,UAAU,YAAb,SACGH,EAAgBQ,IACf,mKAIJ,mBAAGL,UAAU,YAAb,SACE,uBAAOA,UAAU,aAAjB,0CAGJ,qBACEQ,IAAKL,EAAKM,MACVT,UAAU,eACVU,IAAKN,MAlBkBF,SCtBnCS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0e4161cd.chunk.js","sourcesContent":["import \"App.css\";\nimport { useEffect, useRef, useState } from \"react\";\n\nfunction App() {\n  const url =\n    \"https://api.unsplash.com/photos/?client_id=jvBktePoEXo1HhmaW546-MTuJpHSYCcVD9yzYe0VwVk\";\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const response = async () => {\n      try {\n        const res = await fetch(url);\n        const dataJson = await res.json();\n        console.log(dataJson);\n        setData(() => dataJson.slice(0, 10));\n      } catch (e) {\n        console.warn(e);\n      }\n    };\n    response();\n  }, []);\n  const upperCaseLetter = (words) => {\n    const w = words?.[0].toUpperCase() + words?.slice(1);\n    return w;\n  };\n  return (\n    <div className={\"App\"}>\n      {data?.map(({ title, urls, alt_description, description }) => (\n        <div className=\"card\" key={title} style={{ width: \"28em\" }}>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">\n              {upperCaseLetter(alt_description) || \"Title\"}\n            </h5>\n            <p className=\"card-text\">\n              {upperCaseLetter(description) ||\n                \"This is a wider card with supporting text below as a natural\\n\" +\n                  \"              lead-in to additional content. This content is a little bit\\n\" +\n                  \"              longer.\"}\n            </p>\n            <p className=\"card-text\">\n              <small className=\"text-muted\">Last updated 3 mins ago</small>\n            </p>\n          </div>\n          <img\n            src={urls.small}\n            className=\"card-img-top\"\n            alt={alt_description}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}